#include <stdio.h>
#include <stdlib.h>
struct Node {
int data;
struct Node* next;};
struct Node* newNode(int data) {
struct Node* node = (struct Node*)
malloc(sizeof(struct Node));
node->data = data;node->next = NULL;
return node;}
int isEmpty(struct Node* root) {
return !root;}
void push(struct Node** root, int data) {
struct Node* node = newNode(data);
node->next = *root;
*root = node;
printf("%d pushed to stack\n", data);}
int pop(struct Node** root) {
if (isEmpty(*root)) {
return -1; }
struct Node* temp = *root;
*root = (*root)->next;
int popped = temp->data;
free(temp);
return popped;}
int peek(struct Node* root) {
if (isEmpty(root)) {
return -1; }
return root->data;}
void printStack(struct Node* root) {
if (isEmpty(root)) {
printf("Stack is empty\n");
return; }
printf("Stack from top to bottom:\n");
while (root != NULL) {
printf("%d\n", root->data);
root = root->next; }}
int main() {
struct Node* root = NULL;
push(&root, 10); 
push(&root, 20);
push(&root, 30);
printStack(root);
printf("%d popped from stack\n", pop(&root));
printf("%d popped from stack\n", pop(&root));
printStack(root);
return 0;}
